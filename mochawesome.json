{
  "stats": {
    "suites": 2,
    "tests": 13,
    "passes": 13,
    "pending": 0,
    "failures": 0,
    "start": "2020-07-29T15:07:15.423Z",
    "end": "2020-07-29T15:07:15.423Z",
    "duration": 14656,
    "testsRegistered": 13,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "f8d72881-a3d5-4c91-ba30-c0757b1abd41",
      "title": "",
      "fullFile": "cypress/integration/TestWithObjects.js",
      "file": "cypress/integration/TestWithObjects.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "32d48b5c-5cf5-4f0b-b927-ae70ba47194b",
          "title": "Friendly_User_Test",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Open Application",
              "fullTitle": "Friendly_User_Test Open Application",
              "timedOut": null,
              "duration": 1270,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.openMainPage();",
              "err": {},
              "uuid": "0e624b95-54fe-40a4-b2f3-fa3c94e46bc4",
              "parentUUID": "32d48b5c-5cf5-4f0b-b927-ae70ba47194b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Parking Lot Test",
              "fullTitle": "Friendly_User_Test Parking Lot Test",
              "timedOut": null,
              "duration": 284,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_parkingLotPicker.onParkingLotPicker.pickLot(\"Short-Term Parking\");",
              "err": {},
              "uuid": "e429a89f-ac24-4601-9d66-04c942a46dd2",
              "parentUUID": "32d48b5c-5cf5-4f0b-b927-ae70ba47194b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Starting Date Test",
              "fullTitle": "Friendly_User_Test Starting Date Test",
              "timedOut": null,
              "duration": 499,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_startingDate.onStartingDate.pickDate(\"7/29/2020\");",
              "err": {},
              "uuid": "1ca9f818-86b7-4003-b857-16ad14e13365",
              "parentUUID": "32d48b5c-5cf5-4f0b-b927-ae70ba47194b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Starting Time Test",
              "fullTitle": "Friendly_User_Test Starting Time Test",
              "timedOut": null,
              "duration": 367,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_startingTime.OnStartingTime.pickTime(\"12:00\");",
              "err": {},
              "uuid": "68d3f02a-73c1-48dd-b227-892f3665e329",
              "parentUUID": "32d48b5c-5cf5-4f0b-b927-ae70ba47194b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Starting Time AM or PM Test",
              "fullTitle": "Friendly_User_Test Starting Time AM or PM Test",
              "timedOut": null,
              "duration": 106,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_startingTimeAMPM.OnStartingTimeAMPM.pickPeriod(\"PM\");",
              "err": {},
              "uuid": "a62840de-893a-4c92-bc9e-85e417877457",
              "parentUUID": "32d48b5c-5cf5-4f0b-b927-ae70ba47194b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Leaving Date Test",
              "fullTitle": "Friendly_User_Test Leaving Date Test",
              "timedOut": null,
              "duration": 398,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_LeavingDate.OnLeavingDate.leaveDate(\"7/29/2020\");",
              "err": {},
              "uuid": "a9d9600a-1313-42b8-b2e9-bd2938b4e0ea",
              "parentUUID": "32d48b5c-5cf5-4f0b-b927-ae70ba47194b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Leaving Time Test",
              "fullTitle": "Friendly_User_Test Leaving Time Test",
              "timedOut": null,
              "duration": 355,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_LeavingTime.OnLeavingTime.leaveTime(\"1:00\");",
              "err": {},
              "uuid": "2b612a21-c21e-442c-a78d-2ec2b5fe141c",
              "parentUUID": "32d48b5c-5cf5-4f0b-b927-ae70ba47194b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Leaving Time AM or PM Test",
              "fullTitle": "Friendly_User_Test Leaving Time AM or PM Test",
              "timedOut": null,
              "duration": 90,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_LeavingTimeAMPM.OnLeavingTimeAMPM.pickPeriod(\"PM\");",
              "err": {},
              "uuid": "9e6e0d2b-e408-4288-bee0-230e8dfeb41e",
              "parentUUID": "32d48b5c-5cf5-4f0b-b927-ae70ba47194b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Format Submit Test",
              "fullTitle": "Friendly_User_Test Format Submit Test",
              "timedOut": null,
              "duration": 575,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_submitForm.FormSubmit.Submit();",
              "err": {},
              "uuid": "b9a2d370-2bd4-4c5b-ab9e-f097e0a8b015",
              "parentUUID": "32d48b5c-5cf5-4f0b-b927-ae70ba47194b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check Correct Price Test",
              "fullTitle": "Friendly_User_Test Check Correct Price Test",
              "timedOut": null,
              "duration": 44,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_checkPrice.oncheckPrice.ShouldBe(\"$ 2.00\");",
              "err": {},
              "uuid": "23a5304b-e145-42e4-99c7-2d863802073f",
              "parentUUID": "32d48b5c-5cf5-4f0b-b927-ae70ba47194b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check Correct Date Test",
              "fullTitle": "Friendly_User_Test Check Correct Date Test",
              "timedOut": null,
              "duration": 41,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_checkDate.OncheckDate.CheckDate(\"(0 Days, 1 Hours, 0 Minutes)\");",
              "err": {},
              "uuid": "394e5e24-6ada-4357-9383-2dc0fd96c0df",
              "parentUUID": "32d48b5c-5cf5-4f0b-b927-ae70ba47194b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0e624b95-54fe-40a4-b2f3-fa3c94e46bc4",
            "e429a89f-ac24-4601-9d66-04c942a46dd2",
            "1ca9f818-86b7-4003-b857-16ad14e13365",
            "68d3f02a-73c1-48dd-b227-892f3665e329",
            "a62840de-893a-4c92-bc9e-85e417877457",
            "a9d9600a-1313-42b8-b2e9-bd2938b4e0ea",
            "2b612a21-c21e-442c-a78d-2ec2b5fe141c",
            "9e6e0d2b-e408-4288-bee0-230e8dfeb41e",
            "b9a2d370-2bd4-4c5b-ab9e-f097e0a8b015",
            "23a5304b-e145-42e4-99c7-2d863802073f",
            "394e5e24-6ada-4357-9383-2dc0fd96c0df"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4029,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "38411420-9d32-4ced-8d74-f9cb25d0fd31",
      "title": "",
      "fullFile": "cypress/integration/Test_UI.spec.js",
      "file": "cypress/integration/Test_UI.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "aab16c7d-44e3-424d-a9da-66b1cddbc834",
          "title": "Tests is only to check if calendar , dropdowns, radiobutton works",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": " Choose a Parking Lot Dropdown Test",
              "fullTitle": "Tests is only to check if calendar , dropdowns, radiobutton works  Choose a Parking Lot Dropdown Test",
              "timedOut": null,
              "duration": 7960,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.openMainPage();\ncy.get(\"form\").find(\"tbody\").then(function (table) {\n  cy.wrap(table).find(\"tr\").first().get(\"select\").select(\"Short-Term Parking\").should(\"contain\", \" Short-Term Parking\").wait(1000).select(\"Economy Parking\").should(\"contain\", \"Economy Parking\").wait(1000).select(\"Valet Parking\").should(\"contain\", \"Valet Parking\").wait(1000).select(\"Long-Term Garage Parking\").should(\"contain\", \"Long-Term Garage Parking\").wait(1000).select(\"Long-Term Surface Parking\").should(\"contain\", \"Long-Term Surface Parking\").wait(1000);\n});",
              "err": {},
              "uuid": "ca2d9a78-98bb-4707-9c3f-0a21b46c9542",
              "parentUUID": "aab16c7d-44e3-424d-a9da-66b1cddbc834",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Please input calendar, time and  radio boton test",
              "fullTitle": "Tests is only to check if calendar , dropdowns, radiobutton works Please input calendar, time and  radio boton test",
              "timedOut": null,
              "duration": 2667,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"form\").find(\"tbody\").then(function (table) {\n  cy.wrap(table).find(\"tr\").eq(1).get(\"[name=StartingDate]\").then(function (date) {\n    cy.wrap(date).clear().type(\"8/30/2020\").invoke(\"prop\", \"value\").then(function (Value) {\n      expect(Value).to.equal(\"8/30/2020\");\n    });\n  });\n});\ncy.get(\"form\").find(\"tbody\").then(function (table) {\n  cy.wrap(table).find(\"tr\").eq(1).get(\"body > form > table > tbody > tr:nth-child(2) > td:nth-child(2) > a\") // .click()\n  .should(\"have.attr\", \"href\");\n});\ncy.get(\"#StartingTime\").clear().type(\"1:00\").invoke(\"prop\", \"value\").should(\"contain\", \"1:00\");\ncy.get(\"body > form > table > tbody > tr:nth-child(2) > td:nth-child(2) > input[type=radio]:nth-child(4)\").check({\n  force: true\n});\ncy.get(\"body > form > table > tbody > tr:nth-child(2) > td:nth-child(2) > input[type=radio]:nth-child(5)\").check({\n  force: true\n});\ncy.get(\"#LeavingDate\").clear().type(\"8/30/2020\").invoke(\"prop\", \"value\").should(\"contain\", \"8/30/2020\");\ncy.get(\"#LeavingTime\").clear().type(\"2:00\").invoke(\"prop\", \"value\").should(\"contain\", \"2:00\");\ncy.get(\"body > form > table > tbody > tr:nth-child(3) > td:nth-child(2) > a\") // .click()\n.should(\"have.attr\", \"href\");\ncy.get(\"body > form > table > tbody > tr:nth-child(3) > td:nth-child(2) > input[type=radio]:nth-child(4)\").check({\n  force: true\n});\ncy.get(\"body > form > table > tbody > tr:nth-child(3) > td:nth-child(2) > input[type=radio]:nth-child(5)\").check({\n  force: true\n});\ncy.get(\"form\").submit();\ncy.get(\"body > form > table > tbody > tr:nth-child(4) > td:nth-child(2) > span.SubHead > b\").then(function (price) {\n  var value = price.text();\n  expect(value).to.equal(\"$ 12.00\");\n});\ncy.get(\"body > form > table > tbody > tr:nth-child(4) > td:nth-child(2) > span.BodyCopy > b\").then(function (date) {\n  var day = date.text().trim();\n  expect(day).to.equal(\"(0 Days, 1 Hours, 0 Minutes)\");\n});",
              "err": {},
              "uuid": "0450a21e-612a-4eb2-ae50-08842b41c638",
              "parentUUID": "aab16c7d-44e3-424d-a9da-66b1cddbc834",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ca2d9a78-98bb-4707-9c3f-0a21b46c9542",
            "0450a21e-612a-4eb2-ae50-08842b41c638"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 10627,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.1.1"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/results/mochawesome",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "5.1.0"
    }
  }
}