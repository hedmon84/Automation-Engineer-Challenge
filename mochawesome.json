{
  "stats": {
    "suites": 2,
    "tests": 13,
    "passes": 13,
    "pending": 0,
    "failures": 0,
    "start": "2020-07-29T18:32:54.628Z",
    "end": "2020-07-29T18:32:54.628Z",
    "duration": 18119,
    "testsRegistered": 13,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "e1eba91e-5deb-493e-a2ca-cd2a2226c199",
      "title": "",
      "fullFile": "cypress/integration/TestWithObjects.js",
      "file": "cypress/integration/TestWithObjects.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "6dda907d-9c1f-415b-9a03-0e7a6e42a512",
          "title": "Friendly_User_Test",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Open Application",
              "fullTitle": "Friendly_User_Test Open Application",
              "timedOut": null,
              "duration": 1372,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.openMainPage();",
              "err": {},
              "uuid": "a4638ce0-af22-4928-afb8-071159ee51fd",
              "parentUUID": "6dda907d-9c1f-415b-9a03-0e7a6e42a512",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Parking Lot Test",
              "fullTitle": "Friendly_User_Test Parking Lot Test",
              "timedOut": null,
              "duration": 283,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_parkingLotPicker.onParkingLotPicker.pickLot(\"Short-Term Parking\");",
              "err": {},
              "uuid": "2369958c-14cf-4ca7-b959-b8958baeefb4",
              "parentUUID": "6dda907d-9c1f-415b-9a03-0e7a6e42a512",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Starting Date Test",
              "fullTitle": "Friendly_User_Test Starting Date Test",
              "timedOut": null,
              "duration": 561,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_startingDate.onStartingDate.pickDate(\"7/29/2020\");",
              "err": {},
              "uuid": "ad90f737-b2f1-4ca8-a377-0b6bd5221f15",
              "parentUUID": "6dda907d-9c1f-415b-9a03-0e7a6e42a512",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Starting Time Test",
              "fullTitle": "Friendly_User_Test Starting Time Test",
              "timedOut": null,
              "duration": 411,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_startingTime.OnStartingTime.pickTime(\"12:00\");",
              "err": {},
              "uuid": "3897d623-eefe-4812-a282-615adc9c7065",
              "parentUUID": "6dda907d-9c1f-415b-9a03-0e7a6e42a512",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Starting Time AM or PM Test",
              "fullTitle": "Friendly_User_Test Starting Time AM or PM Test",
              "timedOut": null,
              "duration": 181,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_startingTimeAMPM.OnStartingTimeAMPM.pickPeriod(\"PM\");",
              "err": {},
              "uuid": "2476e27e-0f46-4f95-ab75-2db0a5155503",
              "parentUUID": "6dda907d-9c1f-415b-9a03-0e7a6e42a512",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Leaving Date Test",
              "fullTitle": "Friendly_User_Test Leaving Date Test",
              "timedOut": null,
              "duration": 504,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_LeavingDate.OnLeavingDate.leaveDate(\"7/29/2020\");",
              "err": {},
              "uuid": "cfc077ec-6213-41f0-b567-7be13ad2213d",
              "parentUUID": "6dda907d-9c1f-415b-9a03-0e7a6e42a512",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Leaving Time Test",
              "fullTitle": "Friendly_User_Test Leaving Time Test",
              "timedOut": null,
              "duration": 368,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_LeavingTime.OnLeavingTime.leaveTime(\"1:00\");",
              "err": {},
              "uuid": "d93cf395-4dc4-4695-b303-77d939be942c",
              "parentUUID": "6dda907d-9c1f-415b-9a03-0e7a6e42a512",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Leaving Time AM or PM Test",
              "fullTitle": "Friendly_User_Test Leaving Time AM or PM Test",
              "timedOut": null,
              "duration": 146,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_LeavingTimeAMPM.OnLeavingTimeAMPM.pickPeriod(\"PM\");",
              "err": {},
              "uuid": "46b4aaa1-21c8-4cf5-a490-2c4347a3e809",
              "parentUUID": "6dda907d-9c1f-415b-9a03-0e7a6e42a512",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Format Submit Test",
              "fullTitle": "Friendly_User_Test Format Submit Test",
              "timedOut": null,
              "duration": 720,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_submitForm.FormSubmit.Submit();",
              "err": {},
              "uuid": "d05c699d-0467-419c-9fe9-0c8cee84880e",
              "parentUUID": "6dda907d-9c1f-415b-9a03-0e7a6e42a512",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check Correct Price Test",
              "fullTitle": "Friendly_User_Test Check Correct Price Test",
              "timedOut": null,
              "duration": 96,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_checkPrice.oncheckPrice.ShouldBe(\"$ 2.00\");",
              "err": {},
              "uuid": "0db2b26a-b87e-44a5-acd0-6adc6ac62fa6",
              "parentUUID": "6dda907d-9c1f-415b-9a03-0e7a6e42a512",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check Correct Date Test",
              "fullTitle": "Friendly_User_Test Check Correct Date Test",
              "timedOut": null,
              "duration": 56,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_checkDate.OncheckDate.CheckDate(\"(0 Days, 1 Hours, 0 Minutes)\");",
              "err": {},
              "uuid": "b66e372a-816d-4cbb-b425-0bb274e39972",
              "parentUUID": "6dda907d-9c1f-415b-9a03-0e7a6e42a512",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a4638ce0-af22-4928-afb8-071159ee51fd",
            "2369958c-14cf-4ca7-b959-b8958baeefb4",
            "ad90f737-b2f1-4ca8-a377-0b6bd5221f15",
            "3897d623-eefe-4812-a282-615adc9c7065",
            "2476e27e-0f46-4f95-ab75-2db0a5155503",
            "cfc077ec-6213-41f0-b567-7be13ad2213d",
            "d93cf395-4dc4-4695-b303-77d939be942c",
            "46b4aaa1-21c8-4cf5-a490-2c4347a3e809",
            "d05c699d-0467-419c-9fe9-0c8cee84880e",
            "0db2b26a-b87e-44a5-acd0-6adc6ac62fa6",
            "b66e372a-816d-4cbb-b425-0bb274e39972"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4698,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "a5a65905-3ac3-4fc8-a1a0-8ac1c86fbb58",
      "title": "",
      "fullFile": "cypress/integration/Test_UI.spec.js",
      "file": "cypress/integration/Test_UI.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "6d95121f-ae0b-4b76-b486-648094e37a13",
          "title": "Tests is only to check if calendar , dropdowns, radiobutton works",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": " Choose a Parking Lot Dropdown Test",
              "fullTitle": "Tests is only to check if calendar , dropdowns, radiobutton works  Choose a Parking Lot Dropdown Test",
              "timedOut": null,
              "duration": 9059,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.openMainPage();\ncy.get(\"form\").find(\"tbody\").then(function (table) {\n  cy.wrap(table).find(\"tr\").first().get(\"select\").select(\"Short-Term Parking\").should(\"contain\", \" Short-Term Parking\").wait(1000).select(\"Economy Parking\").should(\"contain\", \"Economy Parking\").wait(1000).select(\"Valet Parking\").should(\"contain\", \"Valet Parking\").wait(1000).select(\"Long-Term Garage Parking\").should(\"contain\", \"Long-Term Garage Parking\").wait(1000).select(\"Long-Term Surface Parking\").should(\"contain\", \"Long-Term Surface Parking\").wait(1000);\n});",
              "err": {},
              "uuid": "2d378ef0-b0bb-4602-ad21-bd803d6d9de5",
              "parentUUID": "6d95121f-ae0b-4b76-b486-648094e37a13",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Please input calendar, time and  radio boton test",
              "fullTitle": "Tests is only to check if calendar , dropdowns, radiobutton works Please input calendar, time and  radio boton test",
              "timedOut": null,
              "duration": 4362,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"form\").find(\"tbody\").then(function (table) {\n  cy.wrap(table).find(\"tr\").eq(1).get(\"[name=StartingDate]\").then(function (date) {\n    cy.wrap(date).clear().type(\"8/30/2020\").invoke(\"prop\", \"value\").then(function (Value) {\n      expect(Value).to.equal(\"8/30/2020\");\n    });\n  });\n});\ncy.get(\"form\").find(\"tbody\").then(function (table) {\n  cy.wrap(table).find(\"tr\").eq(1).get(\"body > form > table > tbody > tr:nth-child(2) > td:nth-child(2) > a\") // .click()\n  .should(\"have.attr\", \"href\");\n});\ncy.get(\"#StartingTime\").clear().type(\"1:00\").invoke(\"prop\", \"value\").should(\"contain\", \"1:00\");\ncy.get(\"body > form > table > tbody > tr:nth-child(2) > td:nth-child(2) > input[type=radio]:nth-child(4)\").check({\n  force: true\n});\ncy.get(\"body > form > table > tbody > tr:nth-child(2) > td:nth-child(2) > input[type=radio]:nth-child(5)\").check({\n  force: true\n});\ncy.get(\"#LeavingDate\").clear().type(\"8/30/2020\").invoke(\"prop\", \"value\").should(\"contain\", \"8/30/2020\");\ncy.get(\"#LeavingTime\").clear().type(\"2:00\").invoke(\"prop\", \"value\").should(\"contain\", \"2:00\");\ncy.get(\"body > form > table > tbody > tr:nth-child(3) > td:nth-child(2) > a\") // .click()\n.should(\"have.attr\", \"href\");\ncy.get(\"body > form > table > tbody > tr:nth-child(3) > td:nth-child(2) > input[type=radio]:nth-child(4)\").check({\n  force: true\n});\ncy.get(\"body > form > table > tbody > tr:nth-child(3) > td:nth-child(2) > input[type=radio]:nth-child(5)\").check({\n  force: true\n});\ncy.get(\"form\").submit();\ncy.get(\"body > form > table > tbody > tr:nth-child(4) > td:nth-child(2) > span.SubHead > b\").then(function (price) {\n  var value = price.text();\n  expect(value).to.equal(\"$ 12.00\");\n});\ncy.get(\"body > form > table > tbody > tr:nth-child(4) > td:nth-child(2) > span.BodyCopy > b\").then(function (date) {\n  var day = date.text().trim();\n  expect(day).to.equal(\"(0 Days, 1 Hours, 0 Minutes)\");\n});",
              "err": {},
              "uuid": "f39312de-eaa8-4511-ae72-4059ae87e44d",
              "parentUUID": "6d95121f-ae0b-4b76-b486-648094e37a13",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2d378ef0-b0bb-4602-ad21-bd803d6d9de5",
            "f39312de-eaa8-4511-ae72-4059ae87e44d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 13421,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.1.1"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/results/mochawesome",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "5.1.0"
    }
  }
}