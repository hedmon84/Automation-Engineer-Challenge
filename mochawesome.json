{
  "stats": {
    "suites": 2,
    "tests": 13,
    "passes": 13,
    "pending": 0,
    "failures": 0,
    "start": "2020-07-29T14:12:59.920Z",
    "end": "2020-07-29T14:12:59.920Z",
    "duration": 17104,
    "testsRegistered": 13,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "139dff24-0755-44fc-8c3a-78aa47851421",
      "title": "",
      "fullFile": "cypress/integration/TestWithObjects.js",
      "file": "cypress/integration/TestWithObjects.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "b58aee67-a77e-44ac-a056-28ff49ad6162",
          "title": "Friendly_User_Test",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Open Application",
              "fullTitle": "Friendly_User_Test Open Application",
              "timedOut": null,
              "duration": 1487,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.openMainPage();",
              "err": {},
              "uuid": "365d528e-7e8b-4b15-97f1-91adc32c434a",
              "parentUUID": "b58aee67-a77e-44ac-a056-28ff49ad6162",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Parking Lot Test",
              "fullTitle": "Friendly_User_Test Parking Lot Test",
              "timedOut": null,
              "duration": 294,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_parkingLotPicker.onParkingLotPicker.pickLot(\"Short-Term Parking\");",
              "err": {},
              "uuid": "9f4fae31-a03e-4f14-9ce6-223129bc5d71",
              "parentUUID": "b58aee67-a77e-44ac-a056-28ff49ad6162",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Starting Date Test",
              "fullTitle": "Friendly_User_Test Starting Date Test",
              "timedOut": null,
              "duration": 518,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_startingDate.onStartingDate.pickDate(\"7/29/2020\");",
              "err": {},
              "uuid": "9a9dc764-3cfa-4db0-a0b2-c070cd360558",
              "parentUUID": "b58aee67-a77e-44ac-a056-28ff49ad6162",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Starting Time Test",
              "fullTitle": "Friendly_User_Test Starting Time Test",
              "timedOut": null,
              "duration": 434,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_startingTime.OnStartingTime.pickTime(\"12:00\");",
              "err": {},
              "uuid": "ad4f7148-80c7-4d64-a959-ba812585c3f6",
              "parentUUID": "b58aee67-a77e-44ac-a056-28ff49ad6162",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Starting Time AM or PM Test",
              "fullTitle": "Friendly_User_Test Starting Time AM or PM Test",
              "timedOut": null,
              "duration": 98,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_startingTimeAMPM.OnStartingTimeAMPM.pickPeriod(\"PM\");",
              "err": {},
              "uuid": "691f9f5e-8c9a-47e0-81bd-7e844818bd16",
              "parentUUID": "b58aee67-a77e-44ac-a056-28ff49ad6162",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Leaving Date Test",
              "fullTitle": "Friendly_User_Test Leaving Date Test",
              "timedOut": null,
              "duration": 394,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_LeavingDate.OnLeavingDate.leaveDate(\"7/29/2020\");",
              "err": {},
              "uuid": "9a2055be-2766-409a-a5bc-f34dadec1cff",
              "parentUUID": "b58aee67-a77e-44ac-a056-28ff49ad6162",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Leaving Time Test",
              "fullTitle": "Friendly_User_Test Leaving Time Test",
              "timedOut": null,
              "duration": 366,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_LeavingTime.OnLeavingTime.leaveTime(\"1:00\");",
              "err": {},
              "uuid": "058445ba-49e7-4131-acd0-f10916ebf2f3",
              "parentUUID": "b58aee67-a77e-44ac-a056-28ff49ad6162",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Leaving Time AM or PM Test",
              "fullTitle": "Friendly_User_Test Leaving Time AM or PM Test",
              "timedOut": null,
              "duration": 125,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_LeavingTimeAMPM.OnLeavingTimeAMPM.pickPeriod(\"PM\");",
              "err": {},
              "uuid": "b444dc67-37cf-4167-90b0-8126034e493b",
              "parentUUID": "b58aee67-a77e-44ac-a056-28ff49ad6162",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Format Submit Test",
              "fullTitle": "Friendly_User_Test Format Submit Test",
              "timedOut": null,
              "duration": 660,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_submitForm.FormSubmit.Submit();",
              "err": {},
              "uuid": "e790f288-db9f-4d99-9049-68f3adf413e1",
              "parentUUID": "b58aee67-a77e-44ac-a056-28ff49ad6162",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check Correct Price Test",
              "fullTitle": "Friendly_User_Test Check Correct Price Test",
              "timedOut": null,
              "duration": 48,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_checkPrice.oncheckPrice.ShouldBe(\"$ 2.00\");",
              "err": {},
              "uuid": "e1feecb8-93ca-4c5d-9f24-c5ebfff05ac0",
              "parentUUID": "b58aee67-a77e-44ac-a056-28ff49ad6162",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check Correct Date Test",
              "fullTitle": "Friendly_User_Test Check Correct Date Test",
              "timedOut": null,
              "duration": 37,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_checkDate.OncheckDate.CheckDate(\"(0 Days, 1 Hours, 0 Minutes)\");",
              "err": {},
              "uuid": "2371b884-b083-4b0d-94c3-a43664a39a5a",
              "parentUUID": "b58aee67-a77e-44ac-a056-28ff49ad6162",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "365d528e-7e8b-4b15-97f1-91adc32c434a",
            "9f4fae31-a03e-4f14-9ce6-223129bc5d71",
            "9a9dc764-3cfa-4db0-a0b2-c070cd360558",
            "ad4f7148-80c7-4d64-a959-ba812585c3f6",
            "691f9f5e-8c9a-47e0-81bd-7e844818bd16",
            "9a2055be-2766-409a-a5bc-f34dadec1cff",
            "058445ba-49e7-4131-acd0-f10916ebf2f3",
            "b444dc67-37cf-4167-90b0-8126034e493b",
            "e790f288-db9f-4d99-9049-68f3adf413e1",
            "e1feecb8-93ca-4c5d-9f24-c5ebfff05ac0",
            "2371b884-b083-4b0d-94c3-a43664a39a5a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4461,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "1975cd44-0900-4bf3-9f55-937b105cfd2c",
      "title": "",
      "fullFile": "cypress/integration/Test_UI.spec.js",
      "file": "cypress/integration/Test_UI.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "23506d28-e89f-4736-8714-c69b39de2e94",
          "title": "Tests is only to check if calendar , dropdowns, radiobutton works",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": " Choose a Parking Lot Dropdown Test",
              "fullTitle": "Tests is only to check if calendar , dropdowns, radiobutton works  Choose a Parking Lot Dropdown Test",
              "timedOut": null,
              "duration": 9039,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.openMainPage();\ncy.get(\"form\").find(\"tbody\").then(function (table) {\n  cy.wrap(table).find(\"tr\").first().get(\"select\").select(\"Short-Term Parking\").should(\"contain\", \" Short-Term Parking\").wait(1000).select(\"Economy Parking\").should(\"contain\", \"Economy Parking\").wait(1000).select(\"Valet Parking\").should(\"contain\", \"Valet Parking\").wait(1000).select(\"Long-Term Garage Parking\").should(\"contain\", \"Long-Term Garage Parking\").wait(1000).select(\"Long-Term Surface Parking\").should(\"contain\", \"Long-Term Surface Parking\").wait(1000);\n});",
              "err": {},
              "uuid": "dd3ff8e3-e2f4-42af-95b1-4478aa0f9707",
              "parentUUID": "23506d28-e89f-4736-8714-c69b39de2e94",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Please input calendar, time and  radio boton test",
              "fullTitle": "Tests is only to check if calendar , dropdowns, radiobutton works Please input calendar, time and  radio boton test",
              "timedOut": null,
              "duration": 3604,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"form\").find(\"tbody\").then(function (table) {\n  cy.wrap(table).find(\"tr\").eq(1).get(\"[name=StartingDate]\").then(function (date) {\n    cy.wrap(date).clear().type(\"8/30/2020\").invoke(\"prop\", \"value\").then(function (Value) {\n      expect(Value).to.equal(\"8/30/2020\");\n    });\n  });\n});\ncy.get(\"form\").find(\"tbody\").then(function (table) {\n  cy.wrap(table).find(\"tr\").eq(1).get(\"body > form > table > tbody > tr:nth-child(2) > td:nth-child(2) > a\") // .click()\n  .should(\"have.attr\", \"href\");\n});\ncy.get(\"#StartingTime\").clear().type(\"1:00\").invoke(\"prop\", \"value\").should(\"contain\", \"1:00\");\ncy.get(\"body > form > table > tbody > tr:nth-child(2) > td:nth-child(2) > input[type=radio]:nth-child(4)\").check({\n  force: true\n});\ncy.get(\"body > form > table > tbody > tr:nth-child(2) > td:nth-child(2) > input[type=radio]:nth-child(5)\").check({\n  force: true\n});\ncy.get(\"#LeavingDate\").clear().type(\"8/30/2020\").invoke(\"prop\", \"value\").should(\"contain\", \"8/30/2020\");\ncy.get(\"#LeavingTime\").clear().type(\"2:00\").invoke(\"prop\", \"value\").should(\"contain\", \"2:00\");\ncy.get(\"body > form > table > tbody > tr:nth-child(3) > td:nth-child(2) > a\") // .click()\n.should(\"have.attr\", \"href\");\ncy.get(\"body > form > table > tbody > tr:nth-child(3) > td:nth-child(2) > input[type=radio]:nth-child(4)\").check({\n  force: true\n});\ncy.get(\"body > form > table > tbody > tr:nth-child(3) > td:nth-child(2) > input[type=radio]:nth-child(5)\").check({\n  force: true\n});\ncy.get(\"form\").submit();\ncy.get(\"body > form > table > tbody > tr:nth-child(4) > td:nth-child(2) > span.SubHead > b\").then(function (price) {\n  var value = price.text();\n  expect(value).to.equal(\"$ 12.00\");\n});\ncy.get(\"body > form > table > tbody > tr:nth-child(4) > td:nth-child(2) > span.BodyCopy > b\").then(function (date) {\n  var day = date.text().trim();\n  expect(day).to.equal(\"(0 Days, 1 Hours, 0 Minutes)\");\n});",
              "err": {},
              "uuid": "a8597c0b-df1b-43e9-b7cc-71d26f6d1a8a",
              "parentUUID": "23506d28-e89f-4736-8714-c69b39de2e94",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "dd3ff8e3-e2f4-42af-95b1-4478aa0f9707",
            "a8597c0b-df1b-43e9-b7cc-71d26f6d1a8a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 12643,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.1.1"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/results/mochawesome",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "5.1.0"
    }
  }
}