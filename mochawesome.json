{
  "stats": {
    "suites": 2,
    "tests": 12,
    "passes": 12,
    "pending": 0,
    "failures": 0,
    "start": "2020-07-29T17:00:17.120Z",
    "end": "2020-07-29T17:00:17.120Z",
    "duration": 14531,
    "testsRegistered": 12,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "8859145f-1778-4cda-8c78-da7fb5fef4f6",
      "title": "",
      "fullFile": "cypress/integration/TestWithObjects.js",
      "file": "cypress/integration/TestWithObjects.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "bd10f7a5-6a97-48b8-879c-0a422ed0a5ee",
          "title": "Friendly_User_Test",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Open Application",
              "fullTitle": "Friendly_User_Test Open Application",
              "timedOut": null,
              "duration": 1015,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.openMainPage();",
              "err": {},
              "uuid": "d7985a6c-c3a7-44d4-b99d-5cb5ae521911",
              "parentUUID": "bd10f7a5-6a97-48b8-879c-0a422ed0a5ee",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Parking Lot Test",
              "fullTitle": "Friendly_User_Test Parking Lot Test",
              "timedOut": null,
              "duration": 267,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_parkingLotPicker.onParkingLotPicker.pickLot(\"Short-Term Parking\");",
              "err": {},
              "uuid": "301f06e4-7fb3-4dc0-b393-fc38fcc92587",
              "parentUUID": "bd10f7a5-6a97-48b8-879c-0a422ed0a5ee",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Starting Date Test",
              "fullTitle": "Friendly_User_Test Starting Date Test",
              "timedOut": null,
              "duration": 452,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_startingDate.onStartingDate.pickDate(\"7/29/2020\");",
              "err": {},
              "uuid": "9fa53fd8-5b9c-4919-a357-ec7df72d17ee",
              "parentUUID": "bd10f7a5-6a97-48b8-879c-0a422ed0a5ee",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Starting Time Test",
              "fullTitle": "Friendly_User_Test Starting Time Test",
              "timedOut": null,
              "duration": 359,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_startingTime.OnStartingTime.pickTime(\"12:00\");",
              "err": {},
              "uuid": "13390b21-138f-493d-8868-7aeb9267bbcb",
              "parentUUID": "bd10f7a5-6a97-48b8-879c-0a422ed0a5ee",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Starting Time AM or PM Test",
              "fullTitle": "Friendly_User_Test Starting Time AM or PM Test",
              "timedOut": null,
              "duration": 106,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_startingTimeAMPM.OnStartingTimeAMPM.pickPeriod(\"PM\");",
              "err": {},
              "uuid": "66d706b2-2ce4-431a-9f5c-bf372d54ee24",
              "parentUUID": "bd10f7a5-6a97-48b8-879c-0a422ed0a5ee",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Leaving Date Test",
              "fullTitle": "Friendly_User_Test Leaving Date Test",
              "timedOut": null,
              "duration": 404,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_LeavingDate.OnLeavingDate.leaveDate(\"7/8/2020\");",
              "err": {},
              "uuid": "6079fc8e-9e4e-4cad-b11c-afcf7c9ca36f",
              "parentUUID": "bd10f7a5-6a97-48b8-879c-0a422ed0a5ee",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Leaving Time Test",
              "fullTitle": "Friendly_User_Test Leaving Time Test",
              "timedOut": null,
              "duration": 393,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_LeavingTime.OnLeavingTime.leaveTime(\"12:00\");",
              "err": {},
              "uuid": "9ac0b762-a8b7-4a79-9cb1-ebfccdd23e00",
              "parentUUID": "bd10f7a5-6a97-48b8-879c-0a422ed0a5ee",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Leaving Time AM or PM Test",
              "fullTitle": "Friendly_User_Test Leaving Time AM or PM Test",
              "timedOut": null,
              "duration": 112,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_LeavingTimeAMPM.OnLeavingTimeAMPM.pickPeriod(\"PM\");",
              "err": {},
              "uuid": "455836a6-69e6-4bc3-8b35-507392d7a730",
              "parentUUID": "bd10f7a5-6a97-48b8-879c-0a422ed0a5ee",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Format Submit Test",
              "fullTitle": "Friendly_User_Test Format Submit Test",
              "timedOut": null,
              "duration": 604,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_submitForm.FormSubmit.Submit();",
              "err": {},
              "uuid": "6b956825-90c6-4fdf-ad46-b25b45883482",
              "parentUUID": "bd10f7a5-6a97-48b8-879c-0a422ed0a5ee",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check Error Message Test",
              "fullTitle": "Friendly_User_Test Check Error Message Test",
              "timedOut": null,
              "duration": 63,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "/* Error Type\nERROR! Your Leaving Date Or Time Is Before Your Starting Date or Time {\n  add initial date (7/29/2020) and leavingDate(7/8/2020) to check out this error\n}\n  \n*/\n/*ERROR! Enter A Correctly Formatted Date {\n  for this error type the incorrect date format \n}\n*/\n_CheckErrorMessage.OnerrMessage.CheckErrMessage(\"ERROR! Your Leaving Date Or Time Is Before Your Starting Date or Time\");",
              "err": {},
              "uuid": "3a6e6632-757a-4e98-96ec-cd4b157a6022",
              "parentUUID": "bd10f7a5-6a97-48b8-879c-0a422ed0a5ee",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d7985a6c-c3a7-44d4-b99d-5cb5ae521911",
            "301f06e4-7fb3-4dc0-b393-fc38fcc92587",
            "9fa53fd8-5b9c-4919-a357-ec7df72d17ee",
            "13390b21-138f-493d-8868-7aeb9267bbcb",
            "66d706b2-2ce4-431a-9f5c-bf372d54ee24",
            "6079fc8e-9e4e-4cad-b11c-afcf7c9ca36f",
            "9ac0b762-a8b7-4a79-9cb1-ebfccdd23e00",
            "455836a6-69e6-4bc3-8b35-507392d7a730",
            "6b956825-90c6-4fdf-ad46-b25b45883482",
            "3a6e6632-757a-4e98-96ec-cd4b157a6022"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3775,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "d10b29c3-4283-4537-9c36-8ad1433aa56b",
      "title": "",
      "fullFile": "cypress/integration/Test_UI.spec.js",
      "file": "cypress/integration/Test_UI.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "5d97b6de-9dbe-40bd-8e4e-9a3b3effba90",
          "title": "Tests is only to check if calendar , dropdowns, radiobutton works",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": " Choose a Parking Lot Dropdown Test",
              "fullTitle": "Tests is only to check if calendar , dropdowns, radiobutton works  Choose a Parking Lot Dropdown Test",
              "timedOut": null,
              "duration": 8078,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.openMainPage();\ncy.get(\"form\").find(\"tbody\").then(function (table) {\n  cy.wrap(table).find(\"tr\").first().get(\"select\").select(\"Short-Term Parking\").should(\"contain\", \" Short-Term Parking\").wait(1000).select(\"Economy Parking\").should(\"contain\", \"Economy Parking\").wait(1000).select(\"Valet Parking\").should(\"contain\", \"Valet Parking\").wait(1000).select(\"Long-Term Garage Parking\").should(\"contain\", \"Long-Term Garage Parking\").wait(1000).select(\"Long-Term Surface Parking\").should(\"contain\", \"Long-Term Surface Parking\").wait(1000);\n});",
              "err": {},
              "uuid": "7b3650c0-79cb-4b81-9ebd-17358ec04bbd",
              "parentUUID": "5d97b6de-9dbe-40bd-8e4e-9a3b3effba90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Please input calendar, time and  radio boton test",
              "fullTitle": "Tests is only to check if calendar , dropdowns, radiobutton works Please input calendar, time and  radio boton test",
              "timedOut": null,
              "duration": 2678,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"form\").find(\"tbody\").then(function (table) {\n  cy.wrap(table).find(\"tr\").eq(1).get(\"[name=StartingDate]\").then(function (date) {\n    cy.wrap(date).clear().type(\"8/30/2020\").invoke(\"prop\", \"value\").then(function (Value) {\n      expect(Value).to.equal(\"8/30/2020\");\n    });\n  });\n});\ncy.get(\"form\").find(\"tbody\").then(function (table) {\n  cy.wrap(table).find(\"tr\").eq(1).get(\"body > form > table > tbody > tr:nth-child(2) > td:nth-child(2) > a\") // .click()\n  .should(\"have.attr\", \"href\");\n});\ncy.get(\"#StartingTime\").clear().type(\"1:00\").invoke(\"prop\", \"value\").should(\"contain\", \"1:00\");\ncy.get(\"body > form > table > tbody > tr:nth-child(2) > td:nth-child(2) > input[type=radio]:nth-child(4)\").check({\n  force: true\n});\ncy.get(\"body > form > table > tbody > tr:nth-child(2) > td:nth-child(2) > input[type=radio]:nth-child(5)\").check({\n  force: true\n});\ncy.get(\"#LeavingDate\").clear().type(\"8/30/2020\").invoke(\"prop\", \"value\").should(\"contain\", \"8/30/2020\");\ncy.get(\"#LeavingTime\").clear().type(\"2:00\").invoke(\"prop\", \"value\").should(\"contain\", \"2:00\");\ncy.get(\"body > form > table > tbody > tr:nth-child(3) > td:nth-child(2) > a\") // .click()\n.should(\"have.attr\", \"href\");\ncy.get(\"body > form > table > tbody > tr:nth-child(3) > td:nth-child(2) > input[type=radio]:nth-child(4)\").check({\n  force: true\n});\ncy.get(\"body > form > table > tbody > tr:nth-child(3) > td:nth-child(2) > input[type=radio]:nth-child(5)\").check({\n  force: true\n});\ncy.get(\"form\").submit();\ncy.get(\"body > form > table > tbody > tr:nth-child(4) > td:nth-child(2) > span.SubHead > b\").then(function (price) {\n  var value = price.text();\n  expect(value).to.equal(\"$ 12.00\");\n});\ncy.get(\"body > form > table > tbody > tr:nth-child(4) > td:nth-child(2) > span.BodyCopy > b\").then(function (date) {\n  var day = date.text().trim();\n  expect(day).to.equal(\"(0 Days, 1 Hours, 0 Minutes)\");\n});",
              "err": {},
              "uuid": "9397e067-b4b6-4c1f-98d2-09d2952083c2",
              "parentUUID": "5d97b6de-9dbe-40bd-8e4e-9a3b3effba90",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7b3650c0-79cb-4b81-9ebd-17358ec04bbd",
            "9397e067-b4b6-4c1f-98d2-09d2952083c2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 10756,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.1.1"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/results/mochawesome",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "5.1.0"
    }
  }
}